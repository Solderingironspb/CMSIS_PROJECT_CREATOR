ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f0xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SystemCoreClock
  18              		.section	.data.SystemCoreClock,"aw"
  19              		.align	2
  22              	SystemCoreClock:
  23 0000 00127A00 		.word	8000000
  24              		.global	AHBPrescTable
  25              		.section	.rodata.AHBPrescTable,"a"
  26              		.align	2
  29              	AHBPrescTable:
  30 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  30      00000000 
  30      01020304 
  30      06
  31 000d 070809   		.ascii	"\007\010\011"
  32              		.global	APBPrescTable
  33              		.section	.rodata.APBPrescTable,"a"
  34              		.align	2
  37              	APBPrescTable:
  38 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  38      01020304 
  39              		.section	.text.SystemInit,"ax",%progbits
  40              		.align	1
  41              		.global	SystemInit
  42              		.syntax unified
  43              		.code	16
  44              		.thumb_func
  46              	SystemInit:
  47              	.LFB40:
  48              		.file 1 "Core/Src/system_stm32f0xx.c"
   1:Core/Src/system_stm32f0xx.c **** /**
   2:Core/Src/system_stm32f0xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f0xx.c ****   * @file    system_stm32f0xx.c
   4:Core/Src/system_stm32f0xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f0xx.c ****   * @brief   CMSIS Cortex-M0 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f0xx.c ****   *
   7:Core/Src/system_stm32f0xx.c ****   * 1. This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32f0xx.c ****   *    user application:
   9:Core/Src/system_stm32f0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Core/Src/system_stm32f0xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32f0xx.c ****   *                      the "startup_stm32f0xx.s" file.
  12:Core/Src/system_stm32f0xx.c ****   *
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 2


  13:Core/Src/system_stm32f0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32f0xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32f0xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32f0xx.c ****   *
  17:Core/Src/system_stm32f0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32f0xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32f0xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32f0xx.c ****   *
  21:Core/Src/system_stm32f0xx.c ****   *
  22:Core/Src/system_stm32f0xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32f0xx.c ****   * @attention
  24:Core/Src/system_stm32f0xx.c ****   *
  25:Core/Src/system_stm32f0xx.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  26:Core/Src/system_stm32f0xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32f0xx.c ****   *
  28:Core/Src/system_stm32f0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32f0xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32f0xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32f0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32f0xx.c ****   *
  33:Core/Src/system_stm32f0xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32f0xx.c ****   */
  35:Core/Src/system_stm32f0xx.c **** 
  36:Core/Src/system_stm32f0xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32f0xx.c ****   * @{
  38:Core/Src/system_stm32f0xx.c ****   */
  39:Core/Src/system_stm32f0xx.c **** 
  40:Core/Src/system_stm32f0xx.c **** /** @addtogroup stm32f0xx_system
  41:Core/Src/system_stm32f0xx.c ****   * @{
  42:Core/Src/system_stm32f0xx.c ****   */
  43:Core/Src/system_stm32f0xx.c **** 
  44:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Includes
  45:Core/Src/system_stm32f0xx.c ****   * @{
  46:Core/Src/system_stm32f0xx.c ****   */
  47:Core/Src/system_stm32f0xx.c **** 
  48:Core/Src/system_stm32f0xx.c **** #include "stm32f0xx.h"
  49:Core/Src/system_stm32f0xx.c **** 
  50:Core/Src/system_stm32f0xx.c **** /**
  51:Core/Src/system_stm32f0xx.c ****   * @}
  52:Core/Src/system_stm32f0xx.c ****   */
  53:Core/Src/system_stm32f0xx.c **** 
  54:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_TypesDefinitions
  55:Core/Src/system_stm32f0xx.c ****   * @{
  56:Core/Src/system_stm32f0xx.c ****   */
  57:Core/Src/system_stm32f0xx.c **** 
  58:Core/Src/system_stm32f0xx.c **** /**
  59:Core/Src/system_stm32f0xx.c ****   * @}
  60:Core/Src/system_stm32f0xx.c ****   */
  61:Core/Src/system_stm32f0xx.c **** 
  62:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Defines
  63:Core/Src/system_stm32f0xx.c ****   * @{
  64:Core/Src/system_stm32f0xx.c ****   */
  65:Core/Src/system_stm32f0xx.c **** #if !defined  (HSE_VALUE) 
  66:Core/Src/system_stm32f0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000) /*!< Default value of the External oscillator in Hz.
  67:Core/Src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
  68:Core/Src/system_stm32f0xx.c **** #endif /* HSE_VALUE */
  69:Core/Src/system_stm32f0xx.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 3


  70:Core/Src/system_stm32f0xx.c **** #if !defined  (HSI_VALUE)
  71:Core/Src/system_stm32f0xx.c ****   #define HSI_VALUE    ((uint32_t)8000000) /*!< Default value of the Internal oscillator in Hz.
  72:Core/Src/system_stm32f0xx.c ****                                                 This value can be provided and adapted by the user 
  73:Core/Src/system_stm32f0xx.c **** #endif /* HSI_VALUE */
  74:Core/Src/system_stm32f0xx.c **** 
  75:Core/Src/system_stm32f0xx.c **** #if !defined (HSI48_VALUE)
  76:Core/Src/system_stm32f0xx.c **** #define HSI48_VALUE    ((uint32_t)48000000) /*!< Default value of the HSI48 Internal oscillator in 
  77:Core/Src/system_stm32f0xx.c ****                                                  This value can be provided and adapted by the user
  78:Core/Src/system_stm32f0xx.c **** #endif /* HSI48_VALUE */
  79:Core/Src/system_stm32f0xx.c **** /**
  80:Core/Src/system_stm32f0xx.c ****   * @}
  81:Core/Src/system_stm32f0xx.c ****   */
  82:Core/Src/system_stm32f0xx.c **** 
  83:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Macros
  84:Core/Src/system_stm32f0xx.c ****   * @{
  85:Core/Src/system_stm32f0xx.c ****   */
  86:Core/Src/system_stm32f0xx.c **** 
  87:Core/Src/system_stm32f0xx.c **** /**
  88:Core/Src/system_stm32f0xx.c ****   * @}
  89:Core/Src/system_stm32f0xx.c ****   */
  90:Core/Src/system_stm32f0xx.c **** 
  91:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Variables
  92:Core/Src/system_stm32f0xx.c ****   * @{
  93:Core/Src/system_stm32f0xx.c ****   */
  94:Core/Src/system_stm32f0xx.c ****   /* This variable is updated in three ways:
  95:Core/Src/system_stm32f0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
  96:Core/Src/system_stm32f0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
  97:Core/Src/system_stm32f0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
  98:Core/Src/system_stm32f0xx.c ****          Note: If you use this function to configure the system clock; then there
  99:Core/Src/system_stm32f0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 100:Core/Src/system_stm32f0xx.c ****                variable is updated automatically.
 101:Core/Src/system_stm32f0xx.c ****   */
 102:Core/Src/system_stm32f0xx.c **** uint32_t SystemCoreClock = 8000000;
 103:Core/Src/system_stm32f0xx.c **** 
 104:Core/Src/system_stm32f0xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 105:Core/Src/system_stm32f0xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 106:Core/Src/system_stm32f0xx.c **** 
 107:Core/Src/system_stm32f0xx.c **** /**
 108:Core/Src/system_stm32f0xx.c ****   * @}
 109:Core/Src/system_stm32f0xx.c ****   */
 110:Core/Src/system_stm32f0xx.c **** 
 111:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_FunctionPrototypes
 112:Core/Src/system_stm32f0xx.c ****   * @{
 113:Core/Src/system_stm32f0xx.c ****   */
 114:Core/Src/system_stm32f0xx.c **** 
 115:Core/Src/system_stm32f0xx.c **** /**
 116:Core/Src/system_stm32f0xx.c ****   * @}
 117:Core/Src/system_stm32f0xx.c ****   */
 118:Core/Src/system_stm32f0xx.c **** 
 119:Core/Src/system_stm32f0xx.c **** /** @addtogroup STM32F0xx_System_Private_Functions
 120:Core/Src/system_stm32f0xx.c ****   * @{
 121:Core/Src/system_stm32f0xx.c ****   */
 122:Core/Src/system_stm32f0xx.c **** 
 123:Core/Src/system_stm32f0xx.c **** /**
 124:Core/Src/system_stm32f0xx.c ****   * @brief  Setup the microcontroller system
 125:Core/Src/system_stm32f0xx.c ****   * @param  None
 126:Core/Src/system_stm32f0xx.c ****   * @retval None
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 4


 127:Core/Src/system_stm32f0xx.c ****   */
 128:Core/Src/system_stm32f0xx.c **** void SystemInit(void)
 129:Core/Src/system_stm32f0xx.c **** {
  49              		.loc 1 129 1
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53 0000 80B5     		push	{r7, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
 130:Core/Src/system_stm32f0xx.c ****   /* NOTE :SystemInit(): This function is called at startup just after reset and 
 131:Core/Src/system_stm32f0xx.c ****                          before branch to main program. This call is made inside
 132:Core/Src/system_stm32f0xx.c ****                          the "startup_stm32f0xx.s" file.
 133:Core/Src/system_stm32f0xx.c ****                          User can setups the default system clock (System clock source, PLL Multipl
 134:Core/Src/system_stm32f0xx.c ****                          and Divider factors, AHB/APBx prescalers and Flash settings).
 135:Core/Src/system_stm32f0xx.c ****    */
 136:Core/Src/system_stm32f0xx.c **** }
  59              		.loc 1 136 1
  60 0004 C046     		nop
  61 0006 BD46     		mov	sp, r7
  62              		@ sp needed
  63 0008 80BD     		pop	{r7, pc}
  64              		.cfi_endproc
  65              	.LFE40:
  67              		.global	__aeabi_uidiv
  68              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  69              		.align	1
  70              		.global	SystemCoreClockUpdate
  71              		.syntax unified
  72              		.code	16
  73              		.thumb_func
  75              	SystemCoreClockUpdate:
  76              	.LFB41:
 137:Core/Src/system_stm32f0xx.c **** 
 138:Core/Src/system_stm32f0xx.c **** /**
 139:Core/Src/system_stm32f0xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 140:Core/Src/system_stm32f0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 141:Core/Src/system_stm32f0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 142:Core/Src/system_stm32f0xx.c ****   *         other parameters.
 143:Core/Src/system_stm32f0xx.c ****   *
 144:Core/Src/system_stm32f0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 145:Core/Src/system_stm32f0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 146:Core/Src/system_stm32f0xx.c ****   *         based on this variable will be incorrect.
 147:Core/Src/system_stm32f0xx.c ****   *
 148:Core/Src/system_stm32f0xx.c ****   * @note   - The system frequency computed by this function is not the real
 149:Core/Src/system_stm32f0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 150:Core/Src/system_stm32f0xx.c ****   *           constant and the selected clock source:
 151:Core/Src/system_stm32f0xx.c ****   *
 152:Core/Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 153:Core/Src/system_stm32f0xx.c ****   *
 154:Core/Src/system_stm32f0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 155:Core/Src/system_stm32f0xx.c ****   *
 156:Core/Src/system_stm32f0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 157:Core/Src/system_stm32f0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 5


 158:Core/Src/system_stm32f0xx.c ****   *
 159:Core/Src/system_stm32f0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
 160:Core/Src/system_stm32f0xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 161:Core/Src/system_stm32f0xx.c ****   *             in voltage and temperature.
 162:Core/Src/system_stm32f0xx.c ****   *
 163:Core/Src/system_stm32f0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (its value
 164:Core/Src/system_stm32f0xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 165:Core/Src/system_stm32f0xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 166:Core/Src/system_stm32f0xx.c ****   *              may have wrong result.
 167:Core/Src/system_stm32f0xx.c ****   *
 168:Core/Src/system_stm32f0xx.c ****   *         - The result of this function could be not correct when using fractional
 169:Core/Src/system_stm32f0xx.c ****   *           value for HSE crystal.
 170:Core/Src/system_stm32f0xx.c ****   *
 171:Core/Src/system_stm32f0xx.c ****   * @param  None
 172:Core/Src/system_stm32f0xx.c ****   * @retval None
 173:Core/Src/system_stm32f0xx.c ****   */
 174:Core/Src/system_stm32f0xx.c **** void SystemCoreClockUpdate (void)
 175:Core/Src/system_stm32f0xx.c **** {
  77              		.loc 1 175 1
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 16
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 80B5     		push	{r7, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85 0002 84B0     		sub	sp, sp, #16
  86              		.cfi_def_cfa_offset 24
  87 0004 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
 176:Core/Src/system_stm32f0xx.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
  89              		.loc 1 176 12
  90 0006 0023     		movs	r3, #0
  91 0008 FB60     		str	r3, [r7, #12]
  92              		.loc 1 176 21
  93 000a 0023     		movs	r3, #0
  94 000c BB60     		str	r3, [r7, #8]
  95              		.loc 1 176 34
  96 000e 0023     		movs	r3, #0
  97 0010 7B60     		str	r3, [r7, #4]
  98              		.loc 1 176 49
  99 0012 0023     		movs	r3, #0
 100 0014 3B60     		str	r3, [r7]
 177:Core/Src/system_stm32f0xx.c **** 
 178:Core/Src/system_stm32f0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 179:Core/Src/system_stm32f0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 101              		.loc 1 179 12
 102 0016 314B     		ldr	r3, .L10
 103 0018 5B68     		ldr	r3, [r3, #4]
 104              		.loc 1 179 7
 105 001a 0C22     		movs	r2, #12
 106 001c 1340     		ands	r3, r2
 107 001e FB60     		str	r3, [r7, #12]
 180:Core/Src/system_stm32f0xx.c **** 
 181:Core/Src/system_stm32f0xx.c ****   switch (tmp)
 108              		.loc 1 181 3
 109 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 6


 110 0022 082B     		cmp	r3, #8
 111 0024 11D0     		beq	.L3
 112 0026 FB68     		ldr	r3, [r7, #12]
 113 0028 082B     		cmp	r3, #8
 114 002a 41D8     		bhi	.L4
 115 002c FB68     		ldr	r3, [r7, #12]
 116 002e 002B     		cmp	r3, #0
 117 0030 03D0     		beq	.L5
 118 0032 FB68     		ldr	r3, [r7, #12]
 119 0034 042B     		cmp	r3, #4
 120 0036 04D0     		beq	.L6
 121 0038 3AE0     		b	.L4
 122              	.L5:
 182:Core/Src/system_stm32f0xx.c ****   {
 183:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
 184:Core/Src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 123              		.loc 1 184 23
 124 003a 294B     		ldr	r3, .L10+4
 125 003c 294A     		ldr	r2, .L10+8
 126 003e 1A60     		str	r2, [r3]
 185:Core/Src/system_stm32f0xx.c ****       break;
 127              		.loc 1 185 7
 128 0040 3AE0     		b	.L7
 129              	.L6:
 186:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
 187:Core/Src/system_stm32f0xx.c ****       SystemCoreClock = HSE_VALUE;
 130              		.loc 1 187 23
 131 0042 274B     		ldr	r3, .L10+4
 132 0044 274A     		ldr	r2, .L10+8
 133 0046 1A60     		str	r2, [r3]
 188:Core/Src/system_stm32f0xx.c ****       break;
 134              		.loc 1 188 7
 135 0048 36E0     		b	.L7
 136              	.L3:
 189:Core/Src/system_stm32f0xx.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
 190:Core/Src/system_stm32f0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 191:Core/Src/system_stm32f0xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
 137              		.loc 1 191 20
 138 004a 244B     		ldr	r3, .L10
 139 004c 5A68     		ldr	r2, [r3, #4]
 140              		.loc 1 191 15
 141 004e F023     		movs	r3, #240
 142 0050 9B03     		lsls	r3, r3, #14
 143 0052 1340     		ands	r3, r2
 144 0054 BB60     		str	r3, [r7, #8]
 192:Core/Src/system_stm32f0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 145              		.loc 1 192 22
 146 0056 214B     		ldr	r3, .L10
 147 0058 5A68     		ldr	r2, [r3, #4]
 148              		.loc 1 192 17
 149 005a 8023     		movs	r3, #128
 150 005c 5B02     		lsls	r3, r3, #9
 151 005e 1340     		ands	r3, r2
 152 0060 7B60     		str	r3, [r7, #4]
 193:Core/Src/system_stm32f0xx.c ****       pllmull = ( pllmull >> 18) + 2;
 153              		.loc 1 193 27
 154 0062 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 7


 155 0064 9B0C     		lsrs	r3, r3, #18
 156              		.loc 1 193 15
 157 0066 0233     		adds	r3, r3, #2
 158 0068 BB60     		str	r3, [r7, #8]
 194:Core/Src/system_stm32f0xx.c ****       predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
 159              		.loc 1 194 26
 160 006a 1C4B     		ldr	r3, .L10
 161 006c DB6A     		ldr	r3, [r3, #44]
 162              		.loc 1 194 34
 163 006e 0F22     		movs	r2, #15
 164 0070 1340     		ands	r3, r2
 165              		.loc 1 194 20
 166 0072 0133     		adds	r3, r3, #1
 167 0074 3B60     		str	r3, [r7]
 195:Core/Src/system_stm32f0xx.c **** 
 196:Core/Src/system_stm32f0xx.c ****       if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
 168              		.loc 1 196 10
 169 0076 7A68     		ldr	r2, [r7, #4]
 170 0078 8023     		movs	r3, #128
 171 007a 5B02     		lsls	r3, r3, #9
 172 007c 9A42     		cmp	r2, r3
 173 007e 0AD1     		bne	.L8
 197:Core/Src/system_stm32f0xx.c ****       {
 198:Core/Src/system_stm32f0xx.c ****         /* HSE used as PLL clock source : SystemCoreClock = HSE/PREDIV * PLLMUL */
 199:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
 174              		.loc 1 199 37
 175 0080 3968     		ldr	r1, [r7]
 176 0082 1848     		ldr	r0, .L10+8
 177 0084 FFF7FEFF 		bl	__aeabi_uidiv
 178 0088 0300     		movs	r3, r0
 179 008a 1A00     		movs	r2, r3
 180              		.loc 1 199 52
 181 008c BB68     		ldr	r3, [r7, #8]
 182 008e 5A43     		muls	r2, r3
 183              		.loc 1 199 25
 184 0090 134B     		ldr	r3, .L10+4
 185 0092 1A60     		str	r2, [r3]
 200:Core/Src/system_stm32f0xx.c ****       }
 201:Core/Src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 202:Core/Src/system_stm32f0xx.c ****       else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
 203:Core/Src/system_stm32f0xx.c ****       {
 204:Core/Src/system_stm32f0xx.c ****         /* HSI48 used as PLL clock source : SystemCoreClock = HSI48/PREDIV * PLLMUL */
 205:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI48_VALUE/predivfactor) * pllmull;
 206:Core/Src/system_stm32f0xx.c ****       }
 207:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F091xC || STM32F098xx */
 208:Core/Src/system_stm32f0xx.c ****       else
 209:Core/Src/system_stm32f0xx.c ****       {
 210:Core/Src/system_stm32f0xx.c **** #if defined(STM32F042x6) || defined(STM32F048xx)  || defined(STM32F070x6) \
 211:Core/Src/system_stm32f0xx.c ****  || defined(STM32F078xx) || defined(STM32F071xB)  || defined(STM32F072xB) \
 212:Core/Src/system_stm32f0xx.c ****  || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx)  || defined(STM32F030xC)
 213:Core/Src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/PREDIV * PLLMUL */
 214:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE/predivfactor) * pllmull;
 215:Core/Src/system_stm32f0xx.c **** #else
 216:Core/Src/system_stm32f0xx.c ****         /* HSI used as PLL clock source : SystemCoreClock = HSI/2 * PLLMUL */
 217:Core/Src/system_stm32f0xx.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 218:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 219:Core/Src/system_stm32f0xx.c ****           STM32F071xB || STM32F072xB || STM32F078xx || STM32F070xB ||
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 8


 220:Core/Src/system_stm32f0xx.c ****           STM32F091xC || STM32F098xx || STM32F030xC */
 221:Core/Src/system_stm32f0xx.c ****       }
 222:Core/Src/system_stm32f0xx.c ****       break;
 186              		.loc 1 222 7
 187 0094 10E0     		b	.L7
 188              	.L8:
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 189              		.loc 1 217 44
 190 0096 B968     		ldr	r1, [r7, #8]
 191 0098 0A00     		movs	r2, r1
 192 009a 5201     		lsls	r2, r2, #5
 193 009c 521A     		subs	r2, r2, r1
 194 009e 9301     		lsls	r3, r2, #6
 195 00a0 9B1A     		subs	r3, r3, r2
 196 00a2 DB00     		lsls	r3, r3, #3
 197 00a4 5B18     		adds	r3, r3, r1
 198 00a6 1B02     		lsls	r3, r3, #8
 199 00a8 1A00     		movs	r2, r3
 217:Core/Src/system_stm32f0xx.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
 200              		.loc 1 217 25
 201 00aa 0D4B     		ldr	r3, .L10+4
 202 00ac 1A60     		str	r2, [r3]
 203              		.loc 1 222 7
 204 00ae 03E0     		b	.L7
 205              	.L4:
 223:Core/Src/system_stm32f0xx.c ****     default: /* HSI used as system clock */
 224:Core/Src/system_stm32f0xx.c ****       SystemCoreClock = HSI_VALUE;
 206              		.loc 1 224 23
 207 00b0 0B4B     		ldr	r3, .L10+4
 208 00b2 0C4A     		ldr	r2, .L10+8
 209 00b4 1A60     		str	r2, [r3]
 225:Core/Src/system_stm32f0xx.c ****       break;
 210              		.loc 1 225 7
 211 00b6 C046     		nop
 212              	.L7:
 226:Core/Src/system_stm32f0xx.c ****   }
 227:Core/Src/system_stm32f0xx.c ****   /* Compute HCLK clock frequency ----------------*/
 228:Core/Src/system_stm32f0xx.c ****   /* Get HCLK prescaler */
 229:Core/Src/system_stm32f0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 213              		.loc 1 229 28
 214 00b8 084B     		ldr	r3, .L10
 215 00ba 5B68     		ldr	r3, [r3, #4]
 216              		.loc 1 229 52
 217 00bc 1B09     		lsrs	r3, r3, #4
 218 00be 0F22     		movs	r2, #15
 219 00c0 1340     		ands	r3, r2
 220              		.loc 1 229 22
 221 00c2 094A     		ldr	r2, .L10+12
 222 00c4 D35C     		ldrb	r3, [r2, r3]
 223              		.loc 1 229 7
 224 00c6 FB60     		str	r3, [r7, #12]
 230:Core/Src/system_stm32f0xx.c ****   /* HCLK clock frequency */
 231:Core/Src/system_stm32f0xx.c ****   SystemCoreClock >>= tmp;
 225              		.loc 1 231 19
 226 00c8 054B     		ldr	r3, .L10+4
 227 00ca 1A68     		ldr	r2, [r3]
 228 00cc FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 9


 229 00ce DA40     		lsrs	r2, r2, r3
 230 00d0 034B     		ldr	r3, .L10+4
 231 00d2 1A60     		str	r2, [r3]
 232:Core/Src/system_stm32f0xx.c **** }
 232              		.loc 1 232 1
 233 00d4 C046     		nop
 234 00d6 BD46     		mov	sp, r7
 235 00d8 04B0     		add	sp, sp, #16
 236              		@ sp needed
 237 00da 80BD     		pop	{r7, pc}
 238              	.L11:
 239              		.align	2
 240              	.L10:
 241 00dc 00100240 		.word	1073876992
 242 00e0 00000000 		.word	SystemCoreClock
 243 00e4 00127A00 		.word	8000000
 244 00e8 00000000 		.word	AHBPrescTable
 245              		.cfi_endproc
 246              	.LFE41:
 248              		.text
 249              	.Letext0:
 250              		.file 2 "c:\\dev_tools\\stm32_tools\\gnu-tools-for-stm32.12.3\\tools\\arm-none-eabi\\include\\mach
 251              		.file 3 "c:\\dev_tools\\stm32_tools\\gnu-tools-for-stm32.12.3\\tools\\arm-none-eabi\\include\\sys\
 252              		.file 4 "Drivers/CMSIS/system_stm32f0xx.h"
 253              		.file 5 "Drivers/CMSIS/stm32f030x6.h"
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f0xx.c
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:22     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:19     .data.SystemCoreClock:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:29     .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:26     .rodata.AHBPrescTable:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:37     .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:34     .rodata.APBPrescTable:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:40     .text.SystemInit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:46     .text.SystemInit:00000000 SystemInit
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:69     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:75     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\SOLDER~1\AppData\Local\Temp\cc3ehryQ.s:241    .text.SystemCoreClockUpdate:000000dc $d
                           .group:00000000 wm4.0.4c1577b45e89a7b63de7f514d8a51f3b
                           .group:00000000 wm4.stm32f0xx.h.39.f667cdf3d9ffdd55deba4ac4a796438c
                           .group:00000000 wm4.stm32f030x6.h.37.30db5a8075cb64152d217159c4510d82
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm0.h.66.608acc5992a3a56ab454582ca0035b64
                           .group:00000000 wm4.cmsis_gcc.h.26.60b910ef2cf8eb62703f669ce6a864b2
                           .group:00000000 wm4.core_cm0.h.127.8376da717d3d1986f1bf8fce150d521c
                           .group:00000000 wm4.stm32f030x6.h.428.ee334dbe4987ed1ccb567bd51e93520a
                           .group:00000000 wm4.stm32f0xx.h.180.d904ee57a181b08e8ce3655ddde8b1f1

UNDEFINED SYMBOLS
__aeabi_uidiv
