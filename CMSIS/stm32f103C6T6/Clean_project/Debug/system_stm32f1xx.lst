ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f1xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/system_stm32f1xx.c"
  18              		.global	SystemCoreClock
  19              		.section	.data.SystemCoreClock,"aw"
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 0024F400 		.word	16000000
  25              		.global	AHBPrescTable
  26              		.section	.rodata.AHBPrescTable,"a"
  27              		.align	2
  30              	AHBPrescTable:
  31 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  31      00000000 
  31      01020304 
  31      06
  32 000d 070809   		.ascii	"\007\010\011"
  33              		.global	APBPrescTable
  34              		.section	.rodata.APBPrescTable,"a"
  35              		.align	2
  38              	APBPrescTable:
  39 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  39      01020304 
  40              		.section	.text.SystemInit,"ax",%progbits
  41              		.align	1
  42              		.global	SystemInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	SystemInit:
  48              	.LFB65:
   1:Core/Src/system_stm32f1xx.c **** /**
   2:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Core/Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f1xx.c ****   * 
   7:Core/Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
   8:Core/Src/system_stm32f1xx.c ****   *     user application:
   9:Core/Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  10:Core/Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  11:Core/Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  12:Core/Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 2


  13:Core/Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  14:Core/Src/system_stm32f1xx.c ****   *
  15:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Core/Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  17:Core/Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  18:Core/Src/system_stm32f1xx.c ****   *                                     
  19:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Core/Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  21:Core/Src/system_stm32f1xx.c ****   *                                 during program execution.
  22:Core/Src/system_stm32f1xx.c ****   *
  23:Core/Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  24:Core/Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  25:Core/Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  26:Core/Src/system_stm32f1xx.c ****   *
  27:Core/Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  28:Core/Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  29:Core/Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  30:Core/Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
  31:Core/Src/system_stm32f1xx.c ****   *    configuration.
  32:Core/Src/system_stm32f1xx.c ****   *        
  33:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32f1xx.c ****   * @attention
  35:Core/Src/system_stm32f1xx.c ****   *
  36:Core/Src/system_stm32f1xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  37:Core/Src/system_stm32f1xx.c ****   * All rights reserved.</center></h2>
  38:Core/Src/system_stm32f1xx.c ****   *
  39:Core/Src/system_stm32f1xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  40:Core/Src/system_stm32f1xx.c ****   * the "License"; You may not use this file except in compliance with the
  41:Core/Src/system_stm32f1xx.c ****   * License. You may obtain a copy of the License at:
  42:Core/Src/system_stm32f1xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  43:Core/Src/system_stm32f1xx.c ****   *
  44:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  45:Core/Src/system_stm32f1xx.c ****   */
  46:Core/Src/system_stm32f1xx.c **** 
  47:Core/Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  48:Core/Src/system_stm32f1xx.c ****   * @{
  49:Core/Src/system_stm32f1xx.c ****   */
  50:Core/Src/system_stm32f1xx.c **** 
  51:Core/Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  52:Core/Src/system_stm32f1xx.c ****   * @{
  53:Core/Src/system_stm32f1xx.c ****   */  
  54:Core/Src/system_stm32f1xx.c ****   
  55:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  56:Core/Src/system_stm32f1xx.c ****   * @{
  57:Core/Src/system_stm32f1xx.c ****   */
  58:Core/Src/system_stm32f1xx.c **** 
  59:Core/Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  60:Core/Src/system_stm32f1xx.c **** 
  61:Core/Src/system_stm32f1xx.c **** /**
  62:Core/Src/system_stm32f1xx.c ****   * @}
  63:Core/Src/system_stm32f1xx.c ****   */
  64:Core/Src/system_stm32f1xx.c **** 
  65:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  66:Core/Src/system_stm32f1xx.c ****   * @{
  67:Core/Src/system_stm32f1xx.c ****   */
  68:Core/Src/system_stm32f1xx.c **** 
  69:Core/Src/system_stm32f1xx.c **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 3


  70:Core/Src/system_stm32f1xx.c ****   * @}
  71:Core/Src/system_stm32f1xx.c ****   */
  72:Core/Src/system_stm32f1xx.c **** 
  73:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  74:Core/Src/system_stm32f1xx.c ****   * @{
  75:Core/Src/system_stm32f1xx.c ****   */
  76:Core/Src/system_stm32f1xx.c **** 
  77:Core/Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  78:Core/Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  79:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  80:Core/Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  81:Core/Src/system_stm32f1xx.c **** 
  82:Core/Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
  83:Core/Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
  84:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  85:Core/Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
  86:Core/Src/system_stm32f1xx.c **** 
  87:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
  88:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
  89:Core/Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
  90:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
  91:Core/Src/system_stm32f1xx.c **** 
  92:Core/Src/system_stm32f1xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  93:Core/Src/system_stm32f1xx.c ****          configuration. */
  94:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  95:Core/Src/system_stm32f1xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  96:Core/Src/system_stm32f1xx.c ****      remap of boot address selected */
  97:Core/Src/system_stm32f1xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  98:Core/Src/system_stm32f1xx.c **** 
  99:Core/Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 100:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 101:Core/Src/system_stm32f1xx.c ****      in Sram else user remap will be done in Flash. */
 102:Core/Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 103:Core/Src/system_stm32f1xx.c **** #if defined(VECT_TAB_SRAM)
 104:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 105:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 106:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 107:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 108:Core/Src/system_stm32f1xx.c **** #else
 109:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 110:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 111:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 112:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 113:Core/Src/system_stm32f1xx.c **** #endif /* VECT_TAB_SRAM */
 114:Core/Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 115:Core/Src/system_stm32f1xx.c **** 
 116:Core/Src/system_stm32f1xx.c **** /******************************************************************************/
 117:Core/Src/system_stm32f1xx.c **** 
 118:Core/Src/system_stm32f1xx.c **** /**
 119:Core/Src/system_stm32f1xx.c ****   * @}
 120:Core/Src/system_stm32f1xx.c ****   */
 121:Core/Src/system_stm32f1xx.c **** 
 122:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 123:Core/Src/system_stm32f1xx.c ****   * @{
 124:Core/Src/system_stm32f1xx.c ****   */
 125:Core/Src/system_stm32f1xx.c **** 
 126:Core/Src/system_stm32f1xx.c **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 4


 127:Core/Src/system_stm32f1xx.c ****   * @}
 128:Core/Src/system_stm32f1xx.c ****   */
 129:Core/Src/system_stm32f1xx.c **** 
 130:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 131:Core/Src/system_stm32f1xx.c ****   * @{
 132:Core/Src/system_stm32f1xx.c ****   */
 133:Core/Src/system_stm32f1xx.c **** 
 134:Core/Src/system_stm32f1xx.c ****   /* This variable is updated in three ways:
 135:Core/Src/system_stm32f1xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 136:Core/Src/system_stm32f1xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 137:Core/Src/system_stm32f1xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 138:Core/Src/system_stm32f1xx.c ****          Note: If you use this function to configure the system clock; then there
 139:Core/Src/system_stm32f1xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 140:Core/Src/system_stm32f1xx.c ****                variable is updated automatically.
 141:Core/Src/system_stm32f1xx.c ****   */
 142:Core/Src/system_stm32f1xx.c **** uint32_t SystemCoreClock = 16000000;
 143:Core/Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 144:Core/Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 145:Core/Src/system_stm32f1xx.c **** 
 146:Core/Src/system_stm32f1xx.c **** /**
 147:Core/Src/system_stm32f1xx.c ****   * @}
 148:Core/Src/system_stm32f1xx.c ****   */
 149:Core/Src/system_stm32f1xx.c **** 
 150:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 151:Core/Src/system_stm32f1xx.c ****   * @{
 152:Core/Src/system_stm32f1xx.c ****   */
 153:Core/Src/system_stm32f1xx.c **** 
 154:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 155:Core/Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 156:Core/Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 157:Core/Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 158:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 159:Core/Src/system_stm32f1xx.c **** 
 160:Core/Src/system_stm32f1xx.c **** /**
 161:Core/Src/system_stm32f1xx.c ****   * @}
 162:Core/Src/system_stm32f1xx.c ****   */
 163:Core/Src/system_stm32f1xx.c **** 
 164:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 165:Core/Src/system_stm32f1xx.c ****   * @{
 166:Core/Src/system_stm32f1xx.c ****   */
 167:Core/Src/system_stm32f1xx.c **** 
 168:Core/Src/system_stm32f1xx.c **** /**
 169:Core/Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 170:Core/Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 171:Core/Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 172:Core/Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 173:Core/Src/system_stm32f1xx.c ****   * @param  None
 174:Core/Src/system_stm32f1xx.c ****   * @retval None
 175:Core/Src/system_stm32f1xx.c ****   */
 176:Core/Src/system_stm32f1xx.c **** void SystemInit (void)
 177:Core/Src/system_stm32f1xx.c **** {
  49              		.loc 1 177 1
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 80B4     		push	{r7}
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 5


  55              		.cfi_def_cfa_offset 4
  56              		.cfi_offset 7, -4
  57 0002 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
 178:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 179:Core/Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 180:Core/Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 181:Core/Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 182:Core/Src/system_stm32f1xx.c **** #endif 
 183:Core/Src/system_stm32f1xx.c **** 
 184:Core/Src/system_stm32f1xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 185:Core/Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 186:Core/Src/system_stm32f1xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM.
 187:Core/Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 188:Core/Src/system_stm32f1xx.c **** }
  59              		.loc 1 188 1
  60 0004 00BF     		nop
  61 0006 BD46     		mov	sp, r7
  62              		.cfi_def_cfa_register 13
  63              		@ sp needed
  64 0008 80BC     		pop	{r7}
  65              		.cfi_restore 7
  66              		.cfi_def_cfa_offset 0
  67 000a 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE65:
  71              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  72              		.align	1
  73              		.global	SystemCoreClockUpdate
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	SystemCoreClockUpdate:
  79              	.LFB66:
 189:Core/Src/system_stm32f1xx.c **** 
 190:Core/Src/system_stm32f1xx.c **** /**
 191:Core/Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 192:Core/Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 193:Core/Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 194:Core/Src/system_stm32f1xx.c ****   *         other parameters.
 195:Core/Src/system_stm32f1xx.c ****   *           
 196:Core/Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 197:Core/Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 198:Core/Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 199:Core/Src/system_stm32f1xx.c ****   *     
 200:Core/Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 201:Core/Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 202:Core/Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 203:Core/Src/system_stm32f1xx.c ****   *             
 204:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 205:Core/Src/system_stm32f1xx.c ****   *                                              
 206:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 207:Core/Src/system_stm32f1xx.c ****   *                          
 208:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 209:Core/Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 210:Core/Src/system_stm32f1xx.c ****   *         
 211:Core/Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 6


 212:Core/Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 213:Core/Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 214:Core/Src/system_stm32f1xx.c ****   *    
 215:Core/Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 216:Core/Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 217:Core/Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 218:Core/Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 219:Core/Src/system_stm32f1xx.c ****   *                
 220:Core/Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 221:Core/Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 222:Core/Src/system_stm32f1xx.c ****   * @param  None
 223:Core/Src/system_stm32f1xx.c ****   * @retval None
 224:Core/Src/system_stm32f1xx.c ****   */
 225:Core/Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 226:Core/Src/system_stm32f1xx.c **** {
  80              		.loc 1 226 1
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 16
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85 0000 80B4     		push	{r7}
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 7, -4
  88 0002 85B0     		sub	sp, sp, #20
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
 227:Core/Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
  92              		.loc 1 227 12
  93 0006 0023     		movs	r3, #0
  94 0008 FB60     		str	r3, [r7, #12]
  95              		.loc 1 227 22
  96 000a 0023     		movs	r3, #0
  97 000c BB60     		str	r3, [r7, #8]
  98              		.loc 1 227 36
  99 000e 0023     		movs	r3, #0
 100 0010 7B60     		str	r3, [r7, #4]
 228:Core/Src/system_stm32f1xx.c **** 
 229:Core/Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 230:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 231:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 232:Core/Src/system_stm32f1xx.c **** 
 233:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 234:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 235:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 236:Core/Src/system_stm32f1xx.c ****     
 237:Core/Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 238:Core/Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 101              		.loc 1 238 12
 102 0012 2F4B     		ldr	r3, .L11
 103 0014 5B68     		ldr	r3, [r3, #4]
 104              		.loc 1 238 7
 105 0016 03F00C03 		and	r3, r3, #12
 106 001a FB60     		str	r3, [r7, #12]
 239:Core/Src/system_stm32f1xx.c ****   
 240:Core/Src/system_stm32f1xx.c ****   switch (tmp)
 107              		.loc 1 240 3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 7


 108 001c FB68     		ldr	r3, [r7, #12]
 109 001e 082B     		cmp	r3, #8
 110 0020 11D0     		beq	.L3
 111 0022 FB68     		ldr	r3, [r7, #12]
 112 0024 082B     		cmp	r3, #8
 113 0026 3AD8     		bhi	.L4
 114 0028 FB68     		ldr	r3, [r7, #12]
 115 002a 002B     		cmp	r3, #0
 116 002c 03D0     		beq	.L5
 117 002e FB68     		ldr	r3, [r7, #12]
 118 0030 042B     		cmp	r3, #4
 119 0032 04D0     		beq	.L6
 120 0034 33E0     		b	.L4
 121              	.L5:
 241:Core/Src/system_stm32f1xx.c ****   {
 242:Core/Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 243:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 122              		.loc 1 243 23
 123 0036 274B     		ldr	r3, .L11+4
 124 0038 274A     		ldr	r2, .L11+8
 125 003a 1A60     		str	r2, [r3]
 244:Core/Src/system_stm32f1xx.c ****       break;
 126              		.loc 1 244 7
 127 003c 33E0     		b	.L7
 128              	.L6:
 245:Core/Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 246:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 129              		.loc 1 246 23
 130 003e 254B     		ldr	r3, .L11+4
 131 0040 254A     		ldr	r2, .L11+8
 132 0042 1A60     		str	r2, [r3]
 247:Core/Src/system_stm32f1xx.c ****       break;
 133              		.loc 1 247 7
 134 0044 2FE0     		b	.L7
 135              	.L3:
 248:Core/Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 249:Core/Src/system_stm32f1xx.c **** 
 250:Core/Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 251:Core/Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 136              		.loc 1 251 20
 137 0046 224B     		ldr	r3, .L11
 138 0048 5B68     		ldr	r3, [r3, #4]
 139              		.loc 1 251 15
 140 004a 03F47013 		and	r3, r3, #3932160
 141 004e BB60     		str	r3, [r7, #8]
 252:Core/Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 142              		.loc 1 252 22
 143 0050 1F4B     		ldr	r3, .L11
 144 0052 5B68     		ldr	r3, [r3, #4]
 145              		.loc 1 252 17
 146 0054 03F48033 		and	r3, r3, #65536
 147 0058 7B60     		str	r3, [r7, #4]
 253:Core/Src/system_stm32f1xx.c ****       
 254:Core/Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 255:Core/Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 148              		.loc 1 255 27
 149 005a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 8


 150 005c 9B0C     		lsrs	r3, r3, #18
 151              		.loc 1 255 15
 152 005e 0233     		adds	r3, r3, #2
 153 0060 BB60     		str	r3, [r7, #8]
 256:Core/Src/system_stm32f1xx.c ****       
 257:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 154              		.loc 1 257 10
 155 0062 7B68     		ldr	r3, [r7, #4]
 156 0064 002B     		cmp	r3, #0
 157 0066 06D1     		bne	.L8
 258:Core/Src/system_stm32f1xx.c ****       {
 259:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 260:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 158              		.loc 1 260 45
 159 0068 BB68     		ldr	r3, [r7, #8]
 160 006a 1C4A     		ldr	r2, .L11+12
 161 006c 02FB03F3 		mul	r3, r2, r3
 162              		.loc 1 260 25
 163 0070 184A     		ldr	r2, .L11+4
 164 0072 1360     		str	r3, [r2]
 261:Core/Src/system_stm32f1xx.c ****       }
 262:Core/Src/system_stm32f1xx.c ****       else
 263:Core/Src/system_stm32f1xx.c ****       {
 264:Core/Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 265:Core/Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 266:Core/Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 267:Core/Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 268:Core/Src/system_stm32f1xx.c ****  #else
 269:Core/Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 270:Core/Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 271:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 272:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 273:Core/Src/system_stm32f1xx.c ****         }
 274:Core/Src/system_stm32f1xx.c ****         else
 275:Core/Src/system_stm32f1xx.c ****         {
 276:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 277:Core/Src/system_stm32f1xx.c ****         }
 278:Core/Src/system_stm32f1xx.c ****  #endif
 279:Core/Src/system_stm32f1xx.c ****       }
 280:Core/Src/system_stm32f1xx.c **** #else
 281:Core/Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 282:Core/Src/system_stm32f1xx.c ****       
 283:Core/Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 284:Core/Src/system_stm32f1xx.c ****       {
 285:Core/Src/system_stm32f1xx.c ****          pllmull += 2U;
 286:Core/Src/system_stm32f1xx.c ****       }
 287:Core/Src/system_stm32f1xx.c ****       else
 288:Core/Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 289:Core/Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 290:Core/Src/system_stm32f1xx.c ****       }
 291:Core/Src/system_stm32f1xx.c ****             
 292:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 293:Core/Src/system_stm32f1xx.c ****       {
 294:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 295:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 296:Core/Src/system_stm32f1xx.c ****       }
 297:Core/Src/system_stm32f1xx.c ****       else
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 9


 298:Core/Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 299:Core/Src/system_stm32f1xx.c ****         
 300:Core/Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 301:Core/Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 302:Core/Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 303:Core/Src/system_stm32f1xx.c ****         
 304:Core/Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 305:Core/Src/system_stm32f1xx.c ****         { 
 306:Core/Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 307:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 308:Core/Src/system_stm32f1xx.c ****         }
 309:Core/Src/system_stm32f1xx.c ****         else
 310:Core/Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 311:Core/Src/system_stm32f1xx.c ****           
 312:Core/Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 313:Core/Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 314:Core/Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 315:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 316:Core/Src/system_stm32f1xx.c ****         }
 317:Core/Src/system_stm32f1xx.c ****       }
 318:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 319:Core/Src/system_stm32f1xx.c ****       break;
 165              		.loc 1 319 7
 166 0074 17E0     		b	.L7
 167              	.L8:
 270:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 168              		.loc 1 270 17
 169 0076 164B     		ldr	r3, .L11
 170 0078 5B68     		ldr	r3, [r3, #4]
 270:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 171              		.loc 1 270 24
 172 007a 03F40033 		and	r3, r3, #131072
 270:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 173              		.loc 1 270 12
 174 007e 002B     		cmp	r3, #0
 175 0080 06D0     		beq	.L10
 272:Core/Src/system_stm32f1xx.c ****         }
 176              		.loc 1 272 47
 177 0082 BB68     		ldr	r3, [r7, #8]
 178 0084 154A     		ldr	r2, .L11+12
 179 0086 02FB03F3 		mul	r3, r2, r3
 272:Core/Src/system_stm32f1xx.c ****         }
 180              		.loc 1 272 27
 181 008a 124A     		ldr	r2, .L11+4
 182 008c 1360     		str	r3, [r2]
 183              		.loc 1 319 7
 184 008e 0AE0     		b	.L7
 185              	.L10:
 276:Core/Src/system_stm32f1xx.c ****         }
 186              		.loc 1 276 39
 187 0090 BB68     		ldr	r3, [r7, #8]
 188 0092 114A     		ldr	r2, .L11+8
 189 0094 02FB03F3 		mul	r3, r2, r3
 276:Core/Src/system_stm32f1xx.c ****         }
 190              		.loc 1 276 27
 191 0098 0E4A     		ldr	r2, .L11+4
 192 009a 1360     		str	r3, [r2]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 10


 193              		.loc 1 319 7
 194 009c 03E0     		b	.L7
 195              	.L4:
 320:Core/Src/system_stm32f1xx.c **** 
 321:Core/Src/system_stm32f1xx.c ****     default:
 322:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 196              		.loc 1 322 23
 197 009e 0D4B     		ldr	r3, .L11+4
 198 00a0 0D4A     		ldr	r2, .L11+8
 199 00a2 1A60     		str	r2, [r3]
 323:Core/Src/system_stm32f1xx.c ****       break;
 200              		.loc 1 323 7
 201 00a4 00BF     		nop
 202              	.L7:
 324:Core/Src/system_stm32f1xx.c ****   }
 325:Core/Src/system_stm32f1xx.c ****   
 326:Core/Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 327:Core/Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 328:Core/Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 203              		.loc 1 328 28
 204 00a6 0A4B     		ldr	r3, .L11
 205 00a8 5B68     		ldr	r3, [r3, #4]
 206              		.loc 1 328 52
 207 00aa 1B09     		lsrs	r3, r3, #4
 208 00ac 03F00F03 		and	r3, r3, #15
 209              		.loc 1 328 22
 210 00b0 0B4A     		ldr	r2, .L11+16
 211 00b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 212              		.loc 1 328 7
 213 00b4 FB60     		str	r3, [r7, #12]
 329:Core/Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 330:Core/Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 214              		.loc 1 330 19
 215 00b6 074B     		ldr	r3, .L11+4
 216 00b8 1A68     		ldr	r2, [r3]
 217 00ba FB68     		ldr	r3, [r7, #12]
 218 00bc 22FA03F3 		lsr	r3, r2, r3
 219 00c0 044A     		ldr	r2, .L11+4
 220 00c2 1360     		str	r3, [r2]
 331:Core/Src/system_stm32f1xx.c **** }
 221              		.loc 1 331 1
 222 00c4 00BF     		nop
 223 00c6 1437     		adds	r7, r7, #20
 224              		.cfi_def_cfa_offset 4
 225 00c8 BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 00ca 80BC     		pop	{r7}
 229              		.cfi_restore 7
 230              		.cfi_def_cfa_offset 0
 231 00cc 7047     		bx	lr
 232              	.L12:
 233 00ce 00BF     		.align	2
 234              	.L11:
 235 00d0 00100240 		.word	1073876992
 236 00d4 00000000 		.word	SystemCoreClock
 237 00d8 00127A00 		.word	8000000
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 11


 238 00dc 00093D00 		.word	4000000
 239 00e0 00000000 		.word	AHBPrescTable
 240              		.cfi_endproc
 241              	.LFE66:
 243              		.text
 244              	.Letext0:
 245              		.file 2 "C:\\dev_tools\\STM32_tools\\gnu-tools-for-stm32.12.3\\tools\\bin\\../lib/gcc/arm-none-eab
 246              		.file 3 "C:\\dev_tools\\STM32_tools\\gnu-tools-for-stm32.12.3\\tools\\bin\\../lib/gcc/arm-none-eab
 247              		.file 4 "Drivers/CMSIS/system_stm32f1xx.h"
 248              		.file 5 "Drivers/CMSIS/stm32f103x6.h"
 249              		.file 6 "Drivers/CMSIS/stm32f1xx.h"
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f1xx.c
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:23     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:20     .data.SystemCoreClock:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:30     .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:27     .rodata.AHBPrescTable:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:38     .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:35     .rodata.APBPrescTable:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:41     .text.SystemInit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:47     .text.SystemInit:00000000 SystemInit
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:72     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:78     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\SOLDER~1\AppData\Local\Temp\ccbqVPBm.s:235    .text.SystemCoreClockUpdate:000000d0 $d
                           .group:00000000 wm4.0.b85bc4313fd3072aa031b4bf60964ae8
                           .group:00000000 wm4.stm32f1xx.h.39.208bb8a61c892b7c37d899c49a031330
                           .group:00000000 wm4.stm32f103x6.h.38.c380e9c6400cf3b45331581c31968951
                           .group:00000000 wm4._newlib_version.h.4.6d111ab2e95434b664b53815e5c8ccba
                           .group:00000000 wm4.features.h.33.3e67abe6fb64142d4f6fa9496796153c
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:00000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:00000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:00000000 wm4.stm32f103x6.h.568.9fd852b5e75beca9bb663a0bce9fae78
                           .group:00000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee

NO UNDEFINED SYMBOLS
