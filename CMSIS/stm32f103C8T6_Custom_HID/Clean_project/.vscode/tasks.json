{
    "version": "2.0.0",
    "tasks": [
        /*=============================== Сборка проекта ===================================*/
        {
            "label": "Build Project", //Сборка проекта
            "type": "shell",
            "command": "make -j12 all", // Команда для сборки проекта
            "icon": {
                "color": "terminal.ansiYellow",
                "id": "tools"
            },
            "problemMatcher": ["$gcc"],
            "presentation": {
                "echo": true, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "dedicated", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Собрать проект"
        },
        /*=============================== Сборка проекта ===================================*/
        /*=============================== Очистка проекта ===================================*/
        {
            "label": "Clean Project", //Очистка проекта
            "type": "shell",
            "command": "make -j12 clean", // Команда для сборки проекта
            "problemMatcher": [],
            "icon": {
                "color": "terminal.ansiRed",
                "id": "trash"
            },
            "presentation": {
                "echo": true, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "shared", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Очистить проект"
        },
        /*=============================== Очистка проекта ===================================*/
        /*===================== Получить инфо по используемой памяти ========================*/
        {
            "label": "Build Analyzer", //Получить информацию по состоянию памяти
            "type": "shell",
            "command": "powershell.exe",
            "icon": {
                "color": "terminal.ansiGreen",
                "id": "graph"
            },
            "args": [
                "-ExecutionPolicy",
                "Bypass", //Политика для powershell, чтоб дал запустить скрипт
                "-File",
                ".vscode/ps_scripts/Build_Analyzer.ps1", //Расположение скрипта
                //Введите свои настройки:
                "Debug/GD32F103.elf", //Расположение *.elf файла
                "Debug/GD32F103.map" //Расположение *.map файла
            ],
            "problemMatcher": [],
            "presentation": {
                "echo": false, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "dedicated", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Получение информации о памяти"
        },
        /*===================== Получить инфо по используемой памяти ========================*/
        /*===================== Поиск файлов для Makefile ========================*/
        {
            "label": "Find files for Makefile v1.0", //Получить информацию по состоянию памяти
            "type": "shell",
            "command": "powershell.exe",
            "icon": {
                "color": "terminal.ansiCyan",
                "id": "book"
            },
            "args": [
                "-ExecutionPolicy",
                "Bypass", //Политика для powershell, чтоб дал запустить скрипт
                "-File",
                "Find files for Makefile v1.0.ps1" //Расположение скрипта
            ],
            "problemMatcher": [],
            "presentation": {
                "echo": false, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "dedicated", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Поиск файлов для Makefile"
        },
        /*===================== Поиск файлов для Makefile ========================*/
        /*================ Обновить JSON файлы в соответствии с Makefile ====================*/
        {
            "label": "Makefile: Update JSON files (Experimental)", //Обновление JSON файлов в соответствии с Makefile
            "type": "shell",
            "command": "make update-json",
            "icon": {
                "color": "terminal.ansiCyan",
                "id": "json"
            },
            "problemMatcher": [],
            "presentation": {
                "echo": true, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "dedicated", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Обновить JSON файлы в соответствии с Makefile"
        },
        /*================ Обновить JSON файлы в соответствии с Makefile ====================*/
        /*================  Продолжить работу микроконтроллера после отладки ================*/
        {
            "label": "Monitor resume", //Продолжить работу мк после отладки
            "type": "shell",
            "command": "make resume",
            "icon": {
                "color": "terminal.ansiGreen",
                "id": "vscode"
            },
            "problemMatcher": [],
            "presentation": {
                "echo": true, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "dedicated", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Продолжить работу микроконтроллера после отладки"
        },
        /*================  Продолжить работу микроконтроллера после отладки ================*/

        /*================  clangd Udpate ================*/
        {
            "label": "Clangd_update", //Продолжить работу мк после отладки
            "type": "shell",
            "command": "compiledb make -j12 all",
            "icon": {
                "color": "terminal.ansiGreen",
                "id": "add"
            },
            "problemMatcher": [],
            "presentation": {
                "echo": true, // Отключает вывод команды задачи (* Executing task: ...)
                "reveal": "always", // Показывает терминал (если нужно)
                "focus": false, // Не переводить фокус на терминал
                "panel": "dedicated", // Использовать отдельный терминал
                "clear": true //Стереть все, что было в терминале
            },
            "detail": "Обновить настройки clangd"
        },
        /*================  clangd Udpate ================*/

        /*==== Общая задача, которая будет билдить проект и выводить, сколько прошивка заняла места ====*/
        {
            "label": "Run All Tasks", //Выполнить все задачи
            "dependsOrder": "sequence", // Выполнять задачи последовательно
            "dependsOn": [
                "Build Project",
                "Clangd_update",
                "Build Analyzer"
                
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Запуск всех задач по очереди"
        }
        /*==== Общая задача, которая будет билдить проект и выводить, сколько прошивка заняла места ====*/
    ]
}

















